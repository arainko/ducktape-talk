openapi: "3.0.0"
info:
  version: 0.0.1
  title: Event Management
servers:
  - url: http://localhost:9001
paths:
  /conferences:
    get:
      summary: Fetch all conferences
      operationId: fetch-conferences
      responses:
        200:
          description: "All conferences"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GetConference"
    post:
      summary: Create a new conference
      operationId: create-conference
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateConference"
      responses:
        201:
          description: "Conference successfully created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatedId"
        400:
          description: "Invalid entity"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrors"

  /conferences/{conferenceId}:
    put:
      summary: Update conference information
      operationId: update-conference
      parameters:
        - in: path
          name: conferenceId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateConference"
      responses:
        204:
          description: "Conference successfully updated"
        400:
          description: "Invalid entity"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrors"
        404:
          description: Conference not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"

    delete:
      summary: "Delete a conference"
      operationId: delete-conference
      parameters:
        - in: path
          name: conferenceId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: "Conference successfully deleted"
        404:
          description: Conference not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"

  /conferences/{conferenceId}/talks:
    post:
      summary: Creates a talk in a given conference
      operationId: create-talk
      parameters:
        - in: path
          name: conferenceId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTalk"
      responses:
        201:
          description: Talk created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatedId"
        404:
          description: Conference not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        400:
          description: "Invalid entity"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrors"

  /conferences/{conferenceId}/talks/{talkId}:
    put:
      summary: Update a given talk in a given conference
      operationId: update-talk
      parameters:
        - in: path
          name: conferenceId
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: talkId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTalk"
      responses:
        201:
          description: Talk created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatedId"
        404:
          description: Conference or talk not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        400:
          description: "Invalid entity"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrors"
    delete:
      summary: Delete a given talk in a given conference
      operationId: delete-talk
      parameters:
        - in: path
          name: conferenceId
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: talkId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: Talk created successfully
        404:
          description: Conference or talk not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"

components:
  schemas:
    GetConference:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        dateSpan:
          $ref: "#/components/schemas/DateSpan"
        city:
          type: string
        talks:
          type: array
          items:
            $ref: "#/components/schemas/GetTalk"
      required:
        - id
        - name
        - dateSpan
        - city
        - talks

    CreateConference:
      type: object
      properties:
        name:
          type: string
        dateSpan:
          $ref: "#/components/schemas/DateSpan"
        city:
          type: string
      required:
        - name
        - dateSpan
        - city

    UpdateConference:
      type: object
      properties:
        name:
          type: string
        dateSpan:
          $ref: "#/components/schemas/DateSpan"
        city:
          type: string
      required:
        - name
        - dateSpan
        - city

    DateSpan:
      type: object
      properties:
        start:
          type: string
          format: date
        end:
          type: string
          format: date
      required:
        - start
        - end

    GetTalk:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        elevatorPitch:
          type: string
        presenter:
          $ref: "#/components/schemas/Presenter"
      required:
        - id
        - name
        - elevatorPitch
        - presenter

    CreateTalk:
      type: object
      properties:
        name:
          type: string
        elevatorPitch:
          type: string
        presenter:
          $ref: "#/components/schemas/Presenter"
      required:
        - name
        - elevatorPitch
        - presenter

    UpdateTalk:
      type: object
      properties:
        name:
          type: string
        elevatorPitch:
          type: string
        presenter:
          $ref: "#/components/schemas/Presenter"
      required:
        - name
        - elevatorPitch
        - presenter

    Presenter:
      type: object
      properties:
        name:
          type: string
        bio:
          type: string
        pronouns:
          type: string
          enum:
            - "they/them"
            - "she/her"
            - "he/him"
      required:
        - name
        - bio

    ValidationErrors:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
      required:
        - errors

    CreatedId:
      type: object
      properties:
        createdId:
          type: string
          format: uuid
      required:
        - createdId

    ErrorMessage:
      type: object
      properties:
        errorMessage:
          type: string
      required:
        - errorMessage
